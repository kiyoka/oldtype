#!/usr/local/bin/gosh
;;;
;;; genref - generating reference data in pages.
;;;
;;;  Copyright (c) 2008 Kiyoka Nishiyama, All rights reserved.
;;;
;;;  Permission is hereby granted, free of charge, to any person
;;;  obtaining a copy of this software and associated documentation
;;;  files (the "Software"), to deal in the Software without restriction,
;;;  including without limitation the rights to use, copy, modify,
;;;  merge, publish, distribute, sublicense, and/or sell copies of
;;;  the Software, and to permit persons to whom the Software is
;;;  furnished to do so, subject to the following conditions:
;;;
;;;  The above copyright notice and this permission notice shall be
;;;  included in all copies or substantial portions of the Software.
;;;
;;;  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
;;;  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
;;;  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
;;;  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
;;;  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
;;;  AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
;;;  OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
;;;  IN THE SOFTWARE.

(use srfi-1)
(use util.list)
(use oldtype.util)
(use oldtype.core)
(use oldtype.page)


;;
;; genref ${OT_SITE}
;;
(define (main argv)
  (let* ((site-path (cadr argv))
         (command-list
          (oldtype:load-command-list site-path)))
    (if command-list
        (for-each
         (lambda (entry)
           (print (format "~a => ~a"
                          (cadr  entry)
                          (caddr entry))))
         (filter
          (lambda (x)
            (eq? 'reference (car x)))
          command-list))
        (print "Error : Not found __command.sexp")))
  (exit 0))

